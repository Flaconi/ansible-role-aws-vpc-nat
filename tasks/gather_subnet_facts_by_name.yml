---

- name: combine subnet filter
  set_fact:
    _aws_vpc_nat_subnet_filter: |
      {{
        aws_vpc_nat_subnet_filter_additional + [{
          'key': 'tag:Name',
          'val': natgw.subnet_name
        }]
      }}

- name: gather subnet facts by name
  ec2_vpc_subnet_facts:
    aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY') | default(omit) }}"
    aws_secret_key: "{{ lookup('env', 'AWS_SECRET_KEY') | default(omit)  }}"
    security_token: "{{ lookup('env', 'AWS_SECURITY_TOKEN') | default(omit) }}"
    profile: "{{ aws_vpc_nat_profile | default(omit) }}"
    region: "{{ natgw.region | default(aws_vpc_nat_default_region) }}"
    filters: "{{ _aws_vpc_nat_subnet_filter | get_attr('key', 'val') }}"

  register: _aws_subnet_facts

- name: fail if no subnet was found
  assert:
    that:
      - _aws_subnet_facts.subnets is defined
      - _aws_subnet_facts.subnets | length == 1
    msg: Not exactly one Subnet has been found

- name: set subnet id and name
  set_fact:
    _aws_subnet_id: "{{ _aws_subnet_facts.subnets[0].id }}"
    _aws_subnet_name: "{{ _aws_subnet_facts.subnets[0].tags.Name }}"
